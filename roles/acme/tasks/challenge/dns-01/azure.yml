---
# split top_level for zone_name and if subdomain is defined add subdomain to relative_name
- name: Add a new TXT record to the SAN top-level domains
  azure.azcollection.azure_rm_dnsrecordset:
    resource_group: "{{ acme_azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.', '') == (item.split('.')[-2:] | join('.')) else '.' }}{{ (item | replace('*.', '')).split('.')[:-2] | join('.') }}" # noqa yaml[line-length]
    zone_name: "{{ item.split('.')[-2:] | join('.') }}"
    record_mode: append
    state: present
    record_type: TXT
    records:
      - entry: "{{ acme_challenge_data[item]['dns-01']['resource_value'] }}"
  loop: "{{ acme_domain.subject_alt_name.top_level }}"
  when:
    - acme_domain.subject_alt_name.top_level is defined
    # only runs if the challenge is run the first time, because then there is challenge_data
    - acme_challenge_data[item] is defined

# split second_level for zone_name and if subdomain is defined add subdomain to relative_name
- name: Add a new TXT record to the SAN second-level domains
  azure.azcollection.azure_rm_dnsrecordset:
    resource_group: "{{ acme_azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.', '') == (item.split('.')[-3:] | join('.')) else '.' }}{{ (item | replace('*.', '')).split('.')[:-3] | join('.') }}" # noqa yaml[line-length]
    zone_name: "{{ item.split('.')[-3:] | join('.') }}"
    record_mode: append
    state: present
    record_type: TXT
    records:
      - entry: "{{ acme_challenge_data[item]['dns-01']['resource_value'] }}"
  loop: "{{ acme_domain.subject_alt_name.second_level }}"
  when:
    - acme_domain.subject_alt_name.second_level is defined
    # only runs if the challenge is run the first time, because then there is challenge_data
    - acme_challenge_data[item] is defined

- name: Let the challenge be validated and retrieve the cert and intermediate certificate
  timeout: "{{ acme_challenge_timeout }}"
  community.crypto.acme_certificate:
    account_key_src: "{{ acme_account_key_path }}"
    account_email: "{{ acme_account_email }}"
    csr: "{{ acme_csr_path }}"
    cert: "{{ acme_cert_path }}"
    fullchain: "{{ acme_fullchain_path }}"
    chain: "{{ acme_intermediate_path }}"
    challenge: dns-01
    force: "{{ acme_force_renewal | default(false) }}"
    acme_directory: "{{ acme_directory }}"
    acme_version: 2
    terms_agreed: true
    remaining_days: "{{ acme_remaining_days }}"
    data: "{{ acme_challenge }}"

- name: Remove created SAN top-level TXT records to keep DNS zone clean
  azure.azcollection.azure_rm_dnsrecordset:
    resource_group: "{{ acme_azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.', '') == (item.split('.')[-2:] | join('.')) else '.' }}{{ (item | replace('*.', '')).split('.')[:-2] | join('.') }}" # noqa yaml[line-length]
    zone_name: "{{ item.split('.')[-2:] | join('.') }}"
    record_mode: purge
    state: "{{ acme_azure_purge_state }}"
    record_type: TXT
    records:
      - entry: "{{ acme_challenge_data[item]['dns-01']['resource_value'] }}"
  loop: "{{ acme_domain.subject_alt_name.top_level }}"
  when:
    - acme_domain.subject_alt_name.top_level is defined
    # only runs if the challenge is run the first time, because then there is challenge_data
    - acme_challenge_data[item] is defined

- name: Remove created SAN second-level TXT records to keep DNS zone clean
  azure.azcollection.azure_rm_dnsrecordset:
    resource_group: "{{ acme_azure_resource_group }}"
    relative_name: "{{ '_acme-challenge' }}{{ '' if item | replace('*.', '') == (item.split('.')[-3:] | join('.')) else '.' }}{{ (item | replace('*.', '')).split('.')[:-3] | join('.') }}" # noqa yaml[line-length]
    zone_name: "{{ item.split('.')[-3:] | join('.') }}"
    record_mode: purge
    state: "{{ acme_azure_purge_state }}"
    record_type: TXT
    records:
      - entry: "{{ acme_challenge_data[item]['dns-01']['resource_value'] }}"
  loop: "{{ acme_domain.subject_alt_name.second_level }}"
  when:
    - acme_domain.subject_alt_name.second_level is defined
    # only runs if the challenge is run the first time, because then there is challenge_data
    - acme_challenge_data[item] is defined
