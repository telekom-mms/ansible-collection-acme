---

- name: Create the certificate for example.com with dns-challenge provider "pebble"
  hosts: localhost
  gather_facts: false
  vars:
    data_with_challenge_data:
      account_uri: https://ACME.with_authorizations.de/v2/...
      authorizations:
        blahtest1.example.org:
          challenges:
            - status: pending
              token: Uwqt4U_l6lp04J2KW5nvgJ6LMPXvSrhr
              type: dns-01
              url: https://ACME.with_authorizations.de/v2/...
            - status: pending
              token: ukTTEZIqv_KM9J0iEnysAaiiO31-Rpxg
              type: http-01
              url: https://ACME.with_authorizations.de/v2/....
          expires: '2025-03-26T09:00:45Z'
          identifier:
            type: dns
            value: blahtest1.example.org
          status: pending
          uri: https://ACME.with_authorizations.de/v2/...
        blahtest2.example.org:
          challenges:
            - status: pending
              token: WfZ7M6gF63LZjxyqhXKyDkb3pg2NlvjFKHFTOdgd
              type: dns-01
              url: https://ACME.with_authorizations.de/v2/...
            - status: pending
              token: ALKOBSIHfEBtdeDVeGj3zROeyECNNry9CD4pqwci
              type: http-01
              url: https://ACME.with_authorizations.de/v2/....
          expires: '2025-03-26T09:00:45Z'
          identifier:
            type: dns
            value: blahtest2.example.org
          status: pending
          uri: https://ACME.with_authorizations.de/v2/...
      cert_days: -1
      challenge_data:
        blahtest1.example.org:
          dns-01:
            record: _acme-challenge.blahtest1.example.org
            resource: _acme-challenge
            resource_value: bob4Yd3_SVv-7JET__3G5ZDVWaeGIOxAQmRf3SURbSY
          http-01:
            resource: .well-known/acme-challenge/ukTTEZIqv_KM9J0iEnysAaiiO31-Rpxg
            resource_value: L0bB8aZyOyuw5LNDlslQptrKYBw5P0nPpmt6bGhTYyWP1wTogi9W3V.L0bB8aZyOyuw5LNDlslQptrKYBw5P0nPpmt6bGhTYyWP1wTogi9W3V
        blahtest2.example.org:
          dns-01:
            record: _acme-challenge.blahtest2.example.org
            resource: _acme-challenge
            resource_value: eksnHDhxBOzrTlOgiDzKlUXZtccjSwKIhc
          http-01:
            resource: .well-known/acme-challenge/ukTTEZIqv_KM9J0iEnysAaiiO31-Rpxg
            resource_value: 8fV3Wc5hIqxMohz4llcqLqHuCv7WriMrgWYRogPypoTY5KRT84sfeU.8fV3Wc5hIqxMohz4llcqLqHuCv7WriMrgWYRogPypoTY5KRT84sfeU
      challenge_data_dns:
        _acme-challenge.blahtest1.example.org:
          - bob4Yd3_SVv-7JET__3G5ZDVWaeGIOxAQmRf3SURbSY
        _acme-challenge.blahtest2.example.org:
          - eksnHDhxBOzrTlOgiDzKlUXZtccjSwKIhc
  pre_tasks:
    - name: Data_without_challenge_data
      ansible.builtin.set_fact:
        data_without_challenge_data: "{{ data_with_challenge_data | combine({'challenge_data': {}, 'challenge_data_dns': {}}) }}"
  tasks:

    # ---
    - name: TEST-01 default / dns-01 / 2 domains
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_with_challenge_data | telekom_mms.acme.find_challenges('dns-01', ['blahtest1.example.org', 'blahtest2.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-01
          ansible.builtin.assert:
            that:
              - "set_fact_result is not failed"
              - "'blahtest1.example.org' in test_challenge and 'blahtest2.example.org' in test_challenge"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['dns-01']['record'] in test_challenge['blahtest1.example.org']['dns-01'].record"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['dns-01']['resource'] in test_challenge['blahtest1.example.org']['dns-01'].resource"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['dns-01']['resource_value'] in test_challenge['blahtest1.example.org']['dns-01'].resource_value"


    - name: TEST-02 default / http-01 / 2 domains
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_with_challenge_data | telekom_mms.acme.find_challenges('http-01', ['blahtest1.example.org', 'blahtest2.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-02
          ansible.builtin.assert:
            that:
              - "set_fact_result is not failed"
              - "'blahtest1.example.org' in test_challenge and 'blahtest2.example.org' in test_challenge"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['http-01']['resource'] in test_challenge['blahtest1.example.org']['http-01'].resource"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['http-01']['resource_value'] in test_challenge['blahtest1.example.org']['http-01'].resource_value"

    - name: TEST-03-1 default / dns-01 / expect less then provided by response
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_with_challenge_data | telekom_mms.acme.find_challenges('dns-01', ['blahtest1.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-03-1
          ansible.builtin.assert:
            that:
              - "set_fact_result is failed"
              - "'The API responded with dns-01 challenges for the following domains we did not expect:' in set_fact_result.msg"

    - name: TEST-03-2 default / dns-01 / expect more than provided
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_with_challenge_data | telekom_mms.acme.find_challenges('dns-01', ['blahtest1.example.org', 'blahtest2.example.org', 'one.more.is.one.too.many']) }}"
          register: set_fact_result
        - name: Test assert TEST-03-2
          ansible.builtin.assert:
            that:
              - "set_fact_result is failed"
              - "'Expected dns-01 challenges for the following domains not found: one.more.is.one.too.many' in set_fact_result.msg"

    - name: TEST-04-1 with_authorizations / dns-01 / 2 domains / data_with_challenge_data
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_with_challenge_data | telekom_mms.acme.find_challenges('dns-01', ['blahtest1.example.org', 'blahtest2.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-04-1
          ansible.builtin.assert:
            that:
              - "set_fact_result is not failed"
              - "'blahtest1.example.org' in test_challenge and 'blahtest2.example.org' in test_challenge"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['dns-01']['record'] in test_challenge['blahtest1.example.org']['dns-01'].record"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['dns-01']['resource'] in test_challenge['blahtest1.example.org']['dns-01'].resource"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['dns-01']['resource_value'] in test_challenge['blahtest1.example.org']['dns-01'].resource_value"

    - name: TEST-04-2 with_authorizations / http-01 / 2 domains / data_with_challenge_data
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_with_challenge_data | telekom_mms.acme.find_challenges('http-01', ['blahtest1.example.org', 'blahtest2.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-04-2
          ansible.builtin.assert:
            that:
              - "set_fact_result is not failed"
              - "'blahtest1.example.org' in test_challenge and 'blahtest2.example.org' in test_challenge"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['http-01']['resource'] in test_challenge['blahtest1.example.org']['http-01'].resource"
              - "data_with_challenge_data['challenge_data']['blahtest1.example.org']['http-01']['resource_value'] in test_challenge['blahtest1.example.org']['http-01'].resource_value"

    - name: TEST-05 with_authorizations / dns-01 / 2 domains / data_without_challenge_data
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_without_challenge_data | telekom_mms.acme.find_challenges('dns-01', ['blahtest1.example.org', 'blahtest2.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-05
          ansible.builtin.assert:
            that:
              - "set_fact_result is not failed"
              - "'blahtest1.example.org' in test_challenge and 'blahtest2.example.org' in test_challenge"
              - "data_with_challenge_data['authorizations']['blahtest1.example.org']['challenges'][0]['token'] in test_challenge['blahtest1.example.org']['dns-01'].resource_value"

    - name: TEST-06 with_authorizations / http-01 / 2 domains / data_without_challenge_data
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_without_challenge_data | telekom_mms.acme.find_challenges('http-01', ['blahtest1.example.org', 'blahtest2.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-06
          ansible.builtin.assert:
            that:
              - "set_fact_result is not failed"
              - "'blahtest1.example.org' in test_challenge and 'blahtest2.example.org' in test_challenge"
              - "data_without_challenge_data['authorizations']['blahtest1.example.org']['challenges'][1]['token'] in test_challenge['blahtest1.example.org']['http-01'].resource_value"

    - name: TEST-07 with_authorizations / http-01 / unexpected / data_without_challenge_data
      block:
        - name: Set test_challenge
          ignore_errors: true
          ansible.builtin.set_fact:
            test_challenge: "{{ data_without_challenge_data | telekom_mms.acme.find_challenges('http-01', ['blahtest1.example.org']) }}"
          register: set_fact_result
        - name: Test assert TEST-07
          ansible.builtin.assert:
            that:
              - "set_fact_result is failed"
